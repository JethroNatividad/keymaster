/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Util.DBConnection;
import Util.Validator;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jet
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }
    
    public int currentUserId;
    public boolean rememberEmail;
    public String rememberedEmail;
    private String searchQuery = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        searchTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        copyUsernameBtn = new javax.swing.JButton();
        copyPasswordBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(771, 549));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(246, 247, 249));

        jPanel2.setBackground(new java.awt.Color(246, 247, 249));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        TitleLabel.setFont(TitleLabel.getFont().deriveFont(TitleLabel.getFont().getStyle() | java.awt.Font.BOLD));
        TitleLabel.setForeground(new java.awt.Color(13, 15, 18));
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-key-50.png"))); // NOI18N
        TitleLabel.setText("<html><p style='font-size:24px'><span style='font-weight:bold'>Key</span><span style='font-weight:thin'>master</span></p></html> ");

        logoutBtn.setBackground(new java.awt.Color(56, 68, 81));
        logoutBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutBtn.setText("Lock Vault");
        logoutBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logoutBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
        });
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jScrollPane1.setBackground(new java.awt.Color(246, 247, 249));

        Table.setBackground(new java.awt.Color(246, 247, 249));
        Table.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username/Email", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Table.setGridColor(new java.awt.Color(246, 247, 249));
        Table.setSelectionBackground(new java.awt.Color(56, 68, 81));
        jScrollPane1.setViewportView(Table);

        searchTextField.setBackground(new java.awt.Color(216, 221, 228));
        searchTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        searchTextField.setToolTipText("");
        searchTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        searchTextField.setName(""); // NOI18N
        searchTextField.setPreferredSize(new java.awt.Dimension(78, 38));
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(56, 68, 81));
        searchBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-search-30-2.png"))); // NOI18N
        searchBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        copyUsernameBtn.setBackground(new java.awt.Color(56, 68, 81));
        copyUsernameBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        copyUsernameBtn.setForeground(new java.awt.Color(255, 255, 255));
        copyUsernameBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-copy-20.png"))); // NOI18N
        copyUsernameBtn.setText("Copy Username");
        copyUsernameBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copyUsernameBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        copyUsernameBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                copyUsernameBtnMouseClicked(evt);
            }
        });
        copyUsernameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyUsernameBtnActionPerformed(evt);
            }
        });

        copyPasswordBtn.setBackground(new java.awt.Color(56, 68, 81));
        copyPasswordBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        copyPasswordBtn.setForeground(new java.awt.Color(255, 255, 255));
        copyPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-copy-20.png"))); // NOI18N
        copyPasswordBtn.setText("Copy Password");
        copyPasswordBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copyPasswordBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        copyPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                copyPasswordBtnMouseClicked(evt);
            }
        });
        copyPasswordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyPasswordBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(56, 68, 81));
        addBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-plus-30.png"))); // NOI18N
        addBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(56, 68, 81));
        editBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-edit-30.png"))); // NOI18N
        editBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(153, 0, 51));
        deleteBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-trash-30.png"))); // NOI18N
        deleteBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deleteBtn.setPreferredSize(new java.awt.Dimension(78, 38));
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copyUsernameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copyPasswordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(copyUsernameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(copyPasswordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void copyUsernameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyUsernameBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyUsernameBtnActionPerformed

    private void copyPasswordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyPasswordBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyPasswordBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
      refreshTable();
        
        
    }//GEN-LAST:event_formWindowOpened

    public void refreshTable(){
        // Get all credentials with the user_id equal to currentUserId
        try {
            Connection con = (new DBConnection()).getConnection();
           
                
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT * FROM credentials WHERE user_id = ? AND name LIKE ? OR user_id = ? AND email LIKE ?");
            ps.setInt(1, currentUserId);
            ps.setString(2, "%"+searchQuery+"%");
            ps.setInt(3, currentUserId);
            ps.setString(4, "%"+searchQuery+"%");
//            ps.setInt(3, currentUserId);
//            ps.setString(4, searchQuery);
            ResultSet rs = ps.executeQuery();
            
            DefaultTableModel dtm = (DefaultTableModel) Table.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Object[] student = new Object[5];
                student[0] = rs.getString("id");
                student[1] = rs.getString("name");
                student[2] = rs.getString("email");
                student[3] = rs.getString("password");
                dtm.addRow(student);          
            }
                      
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
        }

        
        
    }
    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        // open Create
        Create create = new Create();
        create.currentUserId = currentUserId;
        create.main = this;
//        create.refreshTable = refreshTable;
        create.setVisible(true);
    }//GEN-LAST:event_addBtnMouseClicked

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        // TODO add your handling code here:
        // get current clicked table
        DefaultTableModel dtm = (DefaultTableModel) Table.getModel();
        boolean isSelected = !Table.getSelectionModel().isSelectionEmpty();
        if(isSelected){
            try {
                Connection con = (new DBConnection()).getConnection();
                Vector selected = dtm.getDataVector().elementAt(Table.convertRowIndexToModel(Table.getSelectedRow()));
                System.out.println(selected);
                Edit edit = new Edit();
                edit.main = this;
                edit.currentUserId = currentUserId;
                edit.id = Integer.parseInt(selected.get(0).toString());
                edit.name = selected.get(1).toString();
                edit.email = selected.get(2).toString();
                edit.password = selected.get(3).toString();
                edit.populateFields();
                

                PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT * FROM users WHERE id = ?");
                ps.setInt(1, currentUserId);
                ResultSet rs = ps.executeQuery();

                if(!rs.next()){
                    // Current user is not found
                    System.err.println("Found");
                    JOptionPane.showMessageDialog(rootPane, "User doesn't exists, Please re login");
                    Login login = new Login();
                    login.setVisible(true);
                    dispose();

                } else {
                    
                    edit.setVisible(true);
                    
                }

            
            } catch (Exception e){
                JOptionPane.showMessageDialog(rootPane, e);
            }
            
            
        }
    }//GEN-LAST:event_editBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        // search by id, then delete
        DefaultTableModel dtm = (DefaultTableModel) Table.getModel();
        boolean isSelected = !Table.getSelectionModel().isSelectionEmpty();
        if(isSelected){
            try {
                Connection con = (new DBConnection()).getConnection();
                Vector selected = dtm.getDataVector().elementAt(Table.convertRowIndexToModel(Table.getSelectedRow()));
                System.out.println(selected);
                int id = Integer.parseInt(selected.get(0).toString());
                
                

                PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT * FROM users WHERE id = ?");
                ps.setInt(1, currentUserId);

                ResultSet rs = ps.executeQuery();

                if(!rs.next()){
                    // Current user is not found
                    System.err.println("Found");
                    JOptionPane.showMessageDialog(rootPane, "User doesn't exists, Please re login");
                    Login login = new Login();
                    login.setVisible(true);
                    dispose();

                } else {
                    
                   // sql query here
//                   "DELETE FROM students WHERE student_id = ?";
                    ps = (PreparedStatement) con.prepareStatement("DELETE FROM credentials WHERE id = ?");
                    ps.setInt(1, id);
                    ps.execute();
                    refreshTable();
                    
                }

            
            } catch (Exception e){
                JOptionPane.showMessageDialog(rootPane, e);
            }
            
            
        }
        
    }//GEN-LAST:event_deleteBtnMouseClicked

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        // TODO add your handling code here:
        Login login = new Login();
        if(rememberEmail){
            login.rememberEmail = true;
            login.rememberedEmail = rememberedEmail;
        }
        login.setVisible(true);

        dispose();
        
    }//GEN-LAST:event_logoutBtnMouseClicked

    private void copyUsernameBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyUsernameBtnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) Table.getModel();
        boolean isSelected = !Table.getSelectionModel().isSelectionEmpty();
        if(isSelected){
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Vector selected = dtm.getDataVector().elementAt(Table.convertRowIndexToModel(Table.getSelectedRow()));
            String username = selected.get(2).toString();
            StringSelection selection = new StringSelection(username);
            clipboard.setContents(selection, selection);
        }
        
    }//GEN-LAST:event_copyUsernameBtnMouseClicked

    private void copyPasswordBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyPasswordBtnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) Table.getModel();
        boolean isSelected = !Table.getSelectionModel().isSelectionEmpty();
        if(isSelected){
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Vector selected = dtm.getDataVector().elementAt(Table.convertRowIndexToModel(Table.getSelectedRow()));
            String password = selected.get(3).toString();
            StringSelection selection = new StringSelection(password);
            clipboard.setContents(selection, selection);
        }
    }//GEN-LAST:event_copyPasswordBtnMouseClicked

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        // TODO add your handling code here:
        String query = searchTextField.getText();
        searchQuery = query;
        refreshTable();
        
            
        
        
        
    }//GEN-LAST:event_searchBtnMouseClicked

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            System.out.println("Enter key pressed");
            String query = searchTextField.getText();
            searchQuery = query;
            refreshTable();

        }
    }//GEN-LAST:event_searchTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton copyPasswordBtn;
    private javax.swing.JButton copyUsernameBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
